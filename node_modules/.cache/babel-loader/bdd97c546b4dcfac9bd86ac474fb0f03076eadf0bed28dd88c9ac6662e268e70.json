{"ast":null,"code":"var _jsxFileName = \"D:\\\\to-do-list\\\\src\\\\Task.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './App.css'; // Make sure this is in App.js\nimport './index.css'; // Make sure this is in index.js\nimport './Task.css'; // Make sure this is in Task.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Task() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  class TaskNode {\n    constructor(description) {\n      this.description = description;\n      this.completed = false;\n      this.next = null;\n    }\n  }\n  class TaskList {\n    constructor() {\n      this.head = null;\n    }\n    addTask(description) {\n      const newTask = new TaskNode(description);\n      if (this.head === null) {\n        this.head = newTask;\n      } else {\n        let current = this.head;\n        while (current.next !== null) {\n          current = current.next;\n        }\n        current.next = newTask;\n      }\n    }\n    getTasks() {\n      let current = this.head;\n      let tasks = [];\n      while (current) {\n        tasks.push({\n          description: current.description,\n          completed: current.completed\n        });\n        current = current.next;\n      }\n      return tasks;\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Main\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        class: \"title\",\n        children: \"To-Do List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Navigation\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: inputValue,\n          onChange: getInput,\n          placeholder: \"Enter a task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"Task-Function\",\n          onClick: addTask,\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Task\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: getTasks()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(Task, \"lKeFmZXgtdUB0LYWtqki1O0Jzwk=\");\n_c = Task;\nexport default Task;\nvar _c;\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Task","_s","tasks","setTasks","TaskNode","constructor","description","completed","next","TaskList","head","addTask","newTask","current","getTasks","push","children","className","class","fileName","_jsxFileName","lineNumber","columnNumber","type","value","inputValue","onChange","getInput","placeholder","id","onClick","_c","$RefreshReg$"],"sources":["D:/to-do-list/src/Task.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport './App.css';  // Make sure this is in App.js\r\nimport './index.css';  // Make sure this is in index.js\r\nimport './Task.css';  // Make sure this is in Task.js\r\n\r\nfunction Task() {\r\n const [tasks,setTasks] = useState([]);\r\nclass TaskNode{\r\n    constructor(description){\r\n        this.description=description;\r\n        this.completed=false;\r\n        this.next=null;\r\n    }\r\n}\r\nclass TaskList{\r\n    constructor(){\r\n        this.head=null;\r\n    }\r\n    addTask(description){\r\n        const newTask = new TaskNode(description);\r\n        if(this.head === null){\r\n            this.head = newTask;\r\n        }else{\r\n            let current = this.head;\r\n            while(current.next !== null){\r\n                current = current.next;\r\n            }\r\n            current.next = newTask;\r\n        }\r\n    }\r\n\r\n    getTasks() {\r\n        let current = this.head;\r\n        let tasks = [];\r\n        while (current) {\r\n            tasks.push({ description: current.description, completed: current.completed });\r\n            current = current.next;\r\n        }\r\n        return tasks;\r\n    }\r\n}\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"Main\">\r\n      <h1 class=\"title\">To-Do List</h1>\r\n        <div className=\"Navigation\">\r\n        <input\r\n          type=\"text\"\r\n          value={inputValue}\r\n          onChange={getInput}\r\n          placeholder=\"Enter a task\"\r\n        />\r\n        <button id=\"Task-Function\" onClick={addTask}>\r\n          Add Task\r\n        </button>\r\n        </div>\r\n     \r\n      <div className=\"container\">\r\n        <div className=\"Task\">\r\n          <ul>{getTasks()}</ul>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Task;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW,CAAC,CAAE;AACrB,OAAO,aAAa,CAAC,CAAE;AACvB,OAAO,YAAY,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtB,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMO,QAAQ;IACVC,WAAWA,CAACC,WAAW,EAAC;MACpB,IAAI,CAACA,WAAW,GAACA,WAAW;MAC5B,IAAI,CAACC,SAAS,GAAC,KAAK;MACpB,IAAI,CAACC,IAAI,GAAC,IAAI;IAClB;EACJ;EACA,MAAMC,QAAQ;IACVJ,WAAWA,CAAA,EAAE;MACT,IAAI,CAACK,IAAI,GAAC,IAAI;IAClB;IACAC,OAAOA,CAACL,WAAW,EAAC;MAChB,MAAMM,OAAO,GAAG,IAAIR,QAAQ,CAACE,WAAW,CAAC;MACzC,IAAG,IAAI,CAACI,IAAI,KAAK,IAAI,EAAC;QAClB,IAAI,CAACA,IAAI,GAAGE,OAAO;MACvB,CAAC,MAAI;QACD,IAAIC,OAAO,GAAG,IAAI,CAACH,IAAI;QACvB,OAAMG,OAAO,CAACL,IAAI,KAAK,IAAI,EAAC;UACxBK,OAAO,GAAGA,OAAO,CAACL,IAAI;QAC1B;QACAK,OAAO,CAACL,IAAI,GAAGI,OAAO;MAC1B;IACJ;IAEAE,QAAQA,CAAA,EAAG;MACP,IAAID,OAAO,GAAG,IAAI,CAACH,IAAI;MACvB,IAAIR,KAAK,GAAG,EAAE;MACd,OAAOW,OAAO,EAAE;QACZX,KAAK,CAACa,IAAI,CAAC;UAAET,WAAW,EAAEO,OAAO,CAACP,WAAW;UAAEC,SAAS,EAAEM,OAAO,CAACN;QAAU,CAAC,CAAC;QAC9EM,OAAO,GAAGA,OAAO,CAACL,IAAI;MAC1B;MACA,OAAON,KAAK;IAChB;EACJ;EAEE,oBACEH,OAAA;IAAAiB,QAAA,eACEjB,OAAA;MAAKkB,SAAS,EAAC,MAAM;MAAAD,QAAA,gBACrBjB,OAAA;QAAImB,KAAK,EAAC,OAAO;QAAAF,QAAA,EAAC;MAAU;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/BvB,OAAA;QAAKkB,SAAS,EAAC,YAAY;QAAAD,QAAA,gBAC3BjB,OAAA;UACEwB,IAAI,EAAC,MAAM;UACXC,KAAK,EAAEC,UAAW;UAClBC,QAAQ,EAAEC,QAAS;UACnBC,WAAW,EAAC;QAAc;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3B,CAAC,eACFvB,OAAA;UAAQ8B,EAAE,EAAC,eAAe;UAACC,OAAO,EAAEnB,OAAQ;UAAAK,QAAA,EAAC;QAE7C;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eAERvB,OAAA;QAAKkB,SAAS,EAAC,WAAW;QAAAD,QAAA,eACxBjB,OAAA;UAAKkB,SAAS,EAAC,MAAM;UAAAD,QAAA,eACnBjB,OAAA;YAAAiB,QAAA,EAAKF,QAAQ,CAAC;UAAC;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV;AAACrB,EAAA,CA9DQD,IAAI;AAAA+B,EAAA,GAAJ/B,IAAI;AAgEb,eAAeA,IAAI;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}