{"ast":null,"code":"var _jsxFileName = \"D:\\\\to-do-list\\\\src\\\\Main.js\",\n  _s = $RefreshSig$();\n// Main.js\nimport React, { useState } from \"react\";\nimport Task from \"./Task\"; // Import Task component\nimport \"./Main.css\"; // Ensure the path to your CSS file is correct\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  const [tasks, setTasks] = useState([]); // State for task list\n  const [inputValue, setInputValue] = useState(\"\"); // State for task input value\n\n  // Add a new task\n  const addTask = () => {\n    if (inputValue.trim() !== \"\") {\n      const newTask = {\n        description: inputValue,\n        completed: false\n      };\n      setTasks([...tasks, newTask]);\n      setInputValue(\"\"); // Clear the input field after adding a task\n    }\n  };\n\n  // Toggle task completion\n  const toggleTaskCompletion = index => {\n    const updatedTasks = [...tasks];\n    updatedTasks[index].completed = !updatedTasks[index].completed;\n    setTasks(updatedTasks);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Main\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"To-Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Task, {\n      tasks: tasks,\n      inputValue: inputValue,\n      setInputValue: setInputValue,\n      addTask: addTask,\n      toggleTaskCompletion: toggleTaskCompletion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Main, \"PXBrZe26VLVTY1uyjOMLL2N2SNQ=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","Task","jsxDEV","_jsxDEV","Main","_s","tasks","setTasks","inputValue","setInputValue","addTask","trim","newTask","description","completed","toggleTaskCompletion","index","updatedTasks","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/to-do-list/src/Main.js"],"sourcesContent":["// Main.js\r\nimport React, { useState } from \"react\";\r\nimport Task from \"./Task\"; // Import Task component\r\nimport \"./Main.css\"; // Ensure the path to your CSS file is correct\r\n\r\nconst Main = () => {\r\n  const [tasks, setTasks] = useState([]); // State for task list\r\n  const [inputValue, setInputValue] = useState(\"\"); // State for task input value\r\n\r\n  // Add a new task\r\n  const addTask = () => {\r\n    if (inputValue.trim() !== \"\") {\r\n      const newTask = { description: inputValue, completed: false };\r\n      setTasks([...tasks, newTask]);\r\n      setInputValue(\"\"); // Clear the input field after adding a task\r\n    }\r\n  };\r\n\r\n  // Toggle task completion\r\n  const toggleTaskCompletion = (index) => {\r\n    const updatedTasks = [...tasks];\r\n    updatedTasks[index].completed = !updatedTasks[index].completed;\r\n    setTasks(updatedTasks);\r\n  };\r\n\r\n  return (\r\n    <div className=\"Main\">\r\n      <h1 className=\"title\">To-Do List</h1>\r\n\r\n      {/* Pass state and functions as props to Task component */}\r\n      <Task\r\n        tasks={tasks}\r\n        inputValue={inputValue}\r\n        setInputValue={setInputValue}\r\n        addTask={addTask}\r\n        toggleTaskCompletion={toggleTaskCompletion}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,QAAQ,CAAC,CAAC;AAC3B,OAAO,YAAY,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxC,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAElD;EACA,MAAMU,OAAO,GAAGA,CAAA,KAAM;IACpB,IAAIF,UAAU,CAACG,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC5B,MAAMC,OAAO,GAAG;QAAEC,WAAW,EAAEL,UAAU;QAAEM,SAAS,EAAE;MAAM,CAAC;MAC7DP,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEM,OAAO,CAAC,CAAC;MAC7BH,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC;IACrB;EACF,CAAC;;EAED;EACA,MAAMM,oBAAoB,GAAIC,KAAK,IAAK;IACtC,MAAMC,YAAY,GAAG,CAAC,GAAGX,KAAK,CAAC;IAC/BW,YAAY,CAACD,KAAK,CAAC,CAACF,SAAS,GAAG,CAACG,YAAY,CAACD,KAAK,CAAC,CAACF,SAAS;IAC9DP,QAAQ,CAACU,YAAY,CAAC;EACxB,CAAC;EAED,oBACEd,OAAA;IAAKe,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBhB,OAAA;MAAIe,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGrCpB,OAAA,CAACF,IAAI;MACHK,KAAK,EAAEA,KAAM;MACbE,UAAU,EAAEA,UAAW;MACvBC,aAAa,EAAEA,aAAc;MAC7BC,OAAO,EAAEA,OAAQ;MACjBK,oBAAoB,EAAEA;IAAqB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAClB,EAAA,CAlCID,IAAI;AAAAoB,EAAA,GAAJpB,IAAI;AAoCV,eAAeA,IAAI;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}