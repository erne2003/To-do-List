{"ast":null,"code":"var _jsxFileName = \"D:\\\\to-do-list\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './App.css'; // Make sure this is in App.js\nimport './index.css'; // Make sure this is in index.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  class TaskNode {\n    constructor(description) {\n      this.description = description;\n      this.completed = false;\n      this.next = null;\n    }\n  }\n  class TaskList {\n    constructor() {\n      this.head = null;\n    }\n    addTask(description) {\n      const newTask = new TaskNode(description);\n      if (this.head === null) {\n        this.head = newTask;\n      } else {\n        let current = this.head;\n        while (current.next !== null) {\n          current = current.next;\n        }\n        current.next = newTask;\n      }\n    }\n    getTasks() {\n      let current = this.head;\n      let tasks = [];\n      while (current) {\n        tasks.push({\n          description: current.description,\n          completed: current.completed\n        });\n        current = current.next;\n      }\n      return tasks;\n    }\n  }\n  const taskList = new TaskList();\n  const addTask = () => {\n    if (inputValue.trim()) {\n      // Check if input is not empty\n      taskList.addTask(inputValue); // Add task to the list\n      setTasks(taskList.getTasks()); // Update state to re-render the task list\n      setInputValue(\"\"); // Clear the input field\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Navigation\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"Task-Function\",\n        onClick: () => addTask('New Task') // Adding a task when the button is clicked\n        ,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Task\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: task.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5arElNKHrQ0SKuGS5GtyhXdyfu4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","inputValue","setInputValue","TaskNode","constructor","description","completed","next","TaskList","head","addTask","newTask","current","getTasks","push","taskList","trim","className","children","id","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","task","index","_c","$RefreshReg$"],"sources":["D:/to-do-list/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport './App.css';  // Make sure this is in App.js\r\nimport './index.css';  // Make sure this is in index.js\r\n\r\n\r\nfunction App() {\r\n \r\n\r\n  const [tasks,setTasks] = useState([]);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  class TaskNode{\r\n      constructor(description){\r\n          this.description=description;\r\n          this.completed=false;\r\n          this.next=null;\r\n      }\r\n  }\r\n  class TaskList{\r\n      constructor(){\r\n          this.head=null;\r\n      }\r\n      addTask(description){\r\n          const newTask = new TaskNode(description);\r\n          if(this.head === null){\r\n              this.head = newTask;\r\n          }else{\r\n              let current = this.head;\r\n              while(current.next !== null){\r\n                  current = current.next;\r\n              }\r\n              current.next = newTask;\r\n          }\r\n      }\r\n  \r\n      getTasks() {\r\n          let current = this.head;\r\n          let tasks = [];\r\n          while (current) {\r\n              tasks.push({ description: current.description, completed: current.completed });\r\n              current = current.next;\r\n          }\r\n          return tasks;\r\n      }\r\n  }\r\n  const taskList= new TaskList();\r\n\r\n  const addTask = () => {\r\n    if (inputValue.trim()) {  // Check if input is not empty\r\n      taskList.addTask(inputValue); // Add task to the list\r\n      setTasks(taskList.getTasks()); // Update state to re-render the task list\r\n      setInputValue(\"\"); // Clear the input field\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"Navigation\">\r\n        <button\r\n          id=\"Task-Function\"\r\n          onClick={() =>addTask('New Task')} // Adding a task when the button is clicked\r\n        >\r\n          Add Task\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"container\">\r\n        <div className=\"Task\">\r\n          {/* Render tasks */}\r\n          <ul>\r\n            {tasks.map((task, index) => (\r\n              <li key={index}>\r\n                <span>{task.description}</span>\r\n                {/* You can add more functionalities like a checkbox or remove button */}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}