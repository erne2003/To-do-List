{"ast":null,"code":"var _jsxFileName = \"D:\\\\to-do-list\\\\src\\\\Task.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./Task.css\"; // Ensure the path is correct\nimport Plans from \"./Plans\"; // Import Plans component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Task = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [selectedPlan, setSelectedPlan] = useState(\"Plan1\"); // State to track the selected plan\n  const [plans, setPlans] = useState([]);\n  useEffect(() => {\n    const saved = localStorage.getItem(\"plans\");\n    if (saved) {\n      setPlans(JSON.parse(saved));\n    }\n  }, []);\n  // Handle input field change\n  const getInput = event => {\n    setInputValue(event.target.value);\n  };\n\n  // Add a new task\n  const addTask = () => {\n    if (inputValue.trim() !== \"\") {\n      const newTask = {\n        description: inputValue,\n        completed: false\n      };\n      setTasks([...tasks, newTask]);\n      setInputValue(\"\"); // Clear the input field\n    }\n  };\n\n  // Toggle task completion\n  const toggleTaskCompletion = index => {\n    const updatedTasks = [...tasks];\n    updatedTasks[index].completed = !updatedTasks[index].completed;\n    setTasks(updatedTasks);\n  };\n\n  // Render task list\n  const getTasks = () => {\n    return tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"List-Container\",\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Space-between-tasks\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: task.completed,\n            onChange: () => toggleTaskCompletion(index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"Task-text\",\n            children: task.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Task\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"To-Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Plan-Navigation\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          display: \"flex\",\n          listStyle: \"none\",\n          padding: 0\n        },\n        children: plans.map((plan, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            marginRight: 8\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"Navigation-Plans\",\n            onClick: () => setSelectedPlan(plan.name),\n            style: {\n              backgroundColor: selectedPlan === plan.name ? \"#eee\" : \"white\"\n            },\n            children: plan.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 9\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 7\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Navigation\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputValue,\n        onChange: getInput,\n        placeholder: \"Enter a task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"Task-Function\",\n        onClick: addTask,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"TaskList\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: getTasks()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(Task, \"LIP6qARNXe2hEkRtsVj3crgJEZY=\");\n_c = Task;\nexport default Task;\nvar _c;\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"names":["React","useState","useEffect","Plans","jsxDEV","_jsxDEV","Task","_s","tasks","setTasks","inputValue","setInputValue","selectedPlan","setSelectedPlan","plans","setPlans","saved","localStorage","getItem","JSON","parse","getInput","event","target","value","addTask","trim","newTask","description","completed","toggleTaskCompletion","index","updatedTasks","getTasks","map","task","className","children","type","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","id","style","display","listStyle","padding","plan","marginRight","onClick","name","backgroundColor","placeholder","_c","$RefreshReg$"],"sources":["D:/to-do-list/src/Task.js"],"sourcesContent":["import React, { useState,useEffect } from \"react\";\r\nimport \"./Task.css\"; // Ensure the path is correct\r\nimport Plans from \"./Plans\"; // Import Plans component\r\nconst Task = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [selectedPlan, setSelectedPlan] = useState(\"Plan1\"); // State to track the selected plan\r\n  const [plans, setPlans] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const saved = localStorage.getItem(\"plans\");\r\n    if (saved) {\r\n      setPlans(JSON.parse(saved));\r\n    }\r\n  }, []);\r\n  // Handle input field change\r\n  const getInput = (event) => {\r\n    setInputValue(event.target.value);\r\n  };\r\n\r\n  // Add a new task\r\n  const addTask = () => {\r\n    if (inputValue.trim() !== \"\") {\r\n      const newTask = { description: inputValue, completed: false };\r\n      setTasks([...tasks, newTask]);\r\n      setInputValue(\"\"); // Clear the input field\r\n    }\r\n  };\r\n\r\n  // Toggle task completion\r\n  const toggleTaskCompletion = (index) => {\r\n    const updatedTasks = [...tasks];\r\n    updatedTasks[index].completed = !updatedTasks[index].completed;\r\n    setTasks(updatedTasks);\r\n  };\r\n\r\n  // Render task list\r\n  const getTasks = () => {\r\n    return tasks.map((task, index) => (\r\n      <div className=\"List-Container\" key={index}>\r\n        <li>\r\n          <div className=\"Space-between-tasks\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={task.completed}\r\n              onChange={() => toggleTaskCompletion(index)}\r\n            />\r\n            <span id=\"Task-text\">{task.description}</span>\r\n          </div>\r\n        </li>\r\n      </div>\r\n    ));\r\n  };\r\n\r\n \r\n\r\n  return (\r\n    <div className=\"Task\">\r\n      <h1 className=\"title\">To-Do List</h1>\r\n      <div className=\"Plan-Navigation\">\r\n      <ul style={{ display: \"flex\", listStyle: \"none\", padding: 0 }}>\r\n    {plans.map((plan, index) => (\r\n      <li key={index} style={{ marginRight: 8 }}>\r\n        <button\r\n          className=\"Navigation-Plans\"\r\n          onClick={() => setSelectedPlan(plan.name)}\r\n          style={{\r\n            backgroundColor: selectedPlan === plan.name ? \"#eee\" : \"white\",\r\n          }}\r\n        >\r\n          {plan.name}\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n      </div>\r\n\r\n      <div className=\"Navigation\">\r\n        <input\r\n          type=\"text\"\r\n          value={inputValue}\r\n          onChange={getInput}\r\n          placeholder=\"Enter a task\"\r\n        />\r\n        <button id=\"Task-Function\" onClick={addTask}>\r\n          Add Task\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"container\">\r\n        <div className=\"TaskList\">\r\n          <ul>{getTasks()}</ul>\r\n        </div>\r\n      </div>\r\n\r\n      \r\n    \r\n\r\n    \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}