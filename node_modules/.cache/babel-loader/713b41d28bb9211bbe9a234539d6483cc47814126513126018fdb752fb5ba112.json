{"ast":null,"code":"var _jsxFileName = \"D:\\\\to-do-list\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './App.css';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [inputValue, setInputValue] = useState(\"\");\n\n  // TaskNode class moved outside of the App function\n  class TaskNode {\n    constructor(description) {\n      this.description = description;\n      this.completed = false; // Initially set as not completed\n    }\n  }\n  const getInput = event => {\n    setInputValue(event.target.value);\n  };\n  const addTask = () => {\n    if (inputValue.trim() !== \"\") {\n      const newTask = new TaskNode(inputValue);\n      setTasks([...tasks, newTask]);\n      setInputValue(\"\"); // Clear the input field\n    }\n  };\n  const getTasks = () => {\n    return tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: task.completed // Bind checkbox state to task completion // Toggle task completion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: task.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Navigation\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputValue,\n        onChange: getInput,\n        placeholder: \"Enter a task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"Task-Function\",\n        onClick: addTask,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Task\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: getTasks()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"PXBrZe26VLVTY1uyjOMLL2N2SNQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","inputValue","setInputValue","TaskNode","constructor","description","completed","getInput","event","target","value","addTask","trim","newTask","getTasks","map","task","index","children","type","checked","fileName","_jsxFileName","lineNumber","columnNumber","className","onChange","placeholder","id","onClick","_c","$RefreshReg$"],"sources":["D:/to-do-list/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport './App.css';\r\nimport './index.css';\r\n\r\nfunction App() {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  // TaskNode class moved outside of the App function\r\n  class TaskNode {\r\n    constructor(description) {\r\n      this.description = description;\r\n      this.completed = false;  // Initially set as not completed\r\n    }\r\n  }\r\n\r\n  const getInput = (event) => {\r\n    setInputValue(event.target.value);\r\n  };\r\n\r\n  const addTask = () => {\r\n    if (inputValue.trim() !== \"\") {\r\n      const newTask = new TaskNode(inputValue);\r\n      setTasks([...tasks, newTask]);\r\n      setInputValue(\"\");  // Clear the input field\r\n    }\r\n  };\r\n\r\n  \r\n  const getTasks = () => {\r\n    return tasks.map((task, index) => (\r\n      <li key={index}>\r\n        {/* Changed from <button> to <input type=\"checkbox\"> */}\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={task.completed}  // Bind checkbox state to task completion // Toggle task completion\r\n        />\r\n        <span>{task.description}</span>\r\n      </li>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"Navigation\">\r\n        <input\r\n          type=\"text\"\r\n          value={inputValue}\r\n          onChange={getInput}\r\n          placeholder=\"Enter a task\"\r\n        />\r\n        <button id=\"Task-Function\" onClick={addTask}>\r\n          Add Task\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"container\">\r\n        <div className=\"Task\">\r\n          <ul>{getTasks()}</ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}