{"ast":null,"code":"var _jsxFileName = \"D:\\\\to-do-list\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './App.css'; // Make sure this is in App.js\nimport './index.css'; // Make sure this is in index.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State for storing tasks\n  const [tasks, setTasks] = useState([]);\n\n  // State for storing input value\n  const [inputValue, setInputValue] = useState(\"\");\n\n  // TaskNode and TaskList classes\n  class TaskNode {\n    constructor(description) {\n      this.description = description;\n      this.completed = false;\n      this.next = null;\n    }\n  }\n  class TaskList {\n    constructor() {\n      this.head = null;\n    }\n\n    // Add task to the list\n    addTask(description) {\n      const newTask = new TaskNode(description);\n      if (this.head === null) {\n        this.head = newTask;\n      } else {\n        let current = this.head;\n        while (current.next !== null) {\n          current = current.next;\n        }\n        current.next = newTask;\n      }\n    }\n\n    // Get all tasks\n    getTasks() {\n      let current = this.head;\n      let tasks = [];\n      while (current) {\n        tasks.push({\n          description: current.description,\n          completed: current.completed\n        });\n        current = current.next;\n      }\n      return tasks;\n    }\n  }\n\n  // Create task list instance\n  const taskList = new TaskList();\n\n  // Function to add a task\n  const addTask = () => {\n    if (inputValue.trim()) {\n      // Check if input is not empty\n      taskList.addTask(inputValue); // Add task to the list\n      setTasks(taskList.getTasks()); // Update state to re-render the task list\n      setInputValue(\"\"); // Clear the input field\n    }\n  };\n\n  // Function to handle input change\n  const handleInputChange = event => {\n    setInputValue(event.target.value); // Update input value state\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Navigation\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputValue // Bind the input field to state\n        ,\n        onChange: handleInputChange // Update state on input change\n        ,\n        placeholder: \"Enter a task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"Task-Function\",\n        onClick: addTask // Add task on button click\n        ,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Task\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: task.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"PXBrZe26VLVTY1uyjOMLL2N2SNQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","inputValue","setInputValue","TaskNode","constructor","description","completed","next","TaskList","head","addTask","newTask","current","getTasks","push","taskList","trim","handleInputChange","event","target","value","className","children","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","id","onClick","map","task","index","_c","$RefreshReg$"],"sources":["D:/to-do-list/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport './App.css'; // Make sure this is in App.js\r\nimport './index.css'; // Make sure this is in index.js\r\n\r\nfunction App() {\r\n  // State for storing tasks\r\n  const [tasks, setTasks] = useState([]);\r\n  \r\n  // State for storing input value\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  // TaskNode and TaskList classes\r\n  class TaskNode {\r\n    constructor(description) {\r\n      this.description = description;\r\n      this.completed = false;\r\n      this.next = null;\r\n    }\r\n  }\r\n\r\n  class TaskList {\r\n    constructor() {\r\n      this.head = null;\r\n    }\r\n\r\n    // Add task to the list\r\n    addTask(description) {\r\n      const newTask = new TaskNode(description);\r\n      if (this.head === null) {\r\n        this.head = newTask;\r\n      } else {\r\n        let current = this.head;\r\n        while (current.next !== null) {\r\n          current = current.next;\r\n        }\r\n        current.next = newTask;\r\n      }\r\n    }\r\n\r\n    // Get all tasks\r\n    getTasks() {\r\n      let current = this.head;\r\n      let tasks = [];\r\n      while (current) {\r\n        tasks.push({ description: current.description, completed: current.completed });\r\n        current = current.next;\r\n      }\r\n      return tasks;\r\n    }\r\n  }\r\n\r\n  // Create task list instance\r\n  const taskList = new TaskList();\r\n\r\n  // Function to add a task\r\n  const addTask = () => {\r\n    if (inputValue.trim()) {  // Check if input is not empty\r\n      taskList.addTask(inputValue); // Add task to the list\r\n      setTasks(taskList.getTasks()); // Update state to re-render the task list\r\n      setInputValue(\"\"); // Clear the input field\r\n    }\r\n  };\r\n\r\n  // Function to handle input change\r\n  const handleInputChange = (event) => {\r\n    setInputValue(event.target.value); // Update input value state\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"Navigation\">\r\n        <input\r\n          type=\"text\"\r\n          value={inputValue} // Bind the input field to state\r\n          onChange={handleInputChange} // Update state on input change\r\n          placeholder=\"Enter a task\"\r\n        />\r\n        <button\r\n          id=\"Task-Function\"\r\n          onClick={addTask} // Add task on button click\r\n        >\r\n          Add Task\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"container\">\r\n        <div className=\"Task\">\r\n          {/* Render tasks */}\r\n          <ul>\r\n            {tasks.map((task, index) => (\r\n              <li key={index}>\r\n                <span>{task.description}</span>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}