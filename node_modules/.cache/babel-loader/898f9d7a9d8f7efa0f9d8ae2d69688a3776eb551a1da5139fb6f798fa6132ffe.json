{"ast":null,"code":"var _jsxFileName = \"D:\\\\to-do-list\\\\src\\\\Main.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Main.css\"; // Make sure this is in Main.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [inputValue, setInputValue] = useState(\"\");\n\n  // TaskNode class moved outside of the App function\n  class TaskNode {\n    constructor(description) {\n      this.description = description;\n      this.completed = false; // Initially set as not completed\n    }\n  }\n  const getInput = event => {\n    setInputValue(event.target.value);\n  };\n  const addTask = () => {\n    if (inputValue.trim() !== \"\") {\n      const newTask = new TaskNode(inputValue);\n      setTasks([...tasks, newTask]);\n      setInputValue(\"\"); // Clear the input field\n    }\n  };\n  const getTasks = () => {\n    return tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"List-Container\",\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Space-between-tasks\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: task.completed // Bind checkbox state to task completion\n            ,\n            onChange: () => toggleTaskCompletion(index) // Toggle task completion on checkbox click\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"Task-text\",\n            children: task.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this));\n  };\n  const toggleTaskCompletion = index => {\n    const updatedTasks = [...tasks];\n    updatedTasks[index].completed = !updatedTasks[index].completed;\n    setTasks(updatedTasks);\n  };\n  return /*#__PURE__*/_jsxDEV(Task, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 4\n  }, this);\n};\n_s(Main, \"PXBrZe26VLVTY1uyjOMLL2N2SNQ=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Main","_s","tasks","setTasks","inputValue","setInputValue","TaskNode","constructor","description","completed","getInput","event","target","value","addTask","trim","newTask","getTasks","map","task","index","className","children","type","checked","onChange","toggleTaskCompletion","fileName","_jsxFileName","lineNumber","columnNumber","id","updatedTasks","Task","_c","$RefreshReg$"],"sources":["D:/to-do-list/src/Main.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Main.css\";  // Make sure this is in Main.js\r\nconst Main = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  // TaskNode class moved outside of the App function\r\n  class TaskNode {\r\n    constructor(description) {\r\n      this.description = description;\r\n      this.completed = false;  // Initially set as not completed\r\n    }\r\n  }\r\n\r\n  const getInput = (event) => {\r\n    setInputValue(event.target.value);\r\n  };\r\n\r\n  const addTask = () => {\r\n    if (inputValue.trim() !== \"\") {\r\n      const newTask = new TaskNode(inputValue);\r\n      setTasks([...tasks, newTask]);\r\n      setInputValue(\"\");  // Clear the input field\r\n    }\r\n  };\r\n\r\n  const getTasks = () => {\r\n    return tasks.map((task, index) => (\r\n      <div className=\"List-Container\" key={index}>\r\n        <li key={index}>\r\n          <div className=\"Space-between-tasks\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={task.completed}  // Bind checkbox state to task completion\r\n              onChange={() => toggleTaskCompletion(index)} // Toggle task completion on checkbox click\r\n            />\r\n            <span id=\"Task-text\">{task.description}</span>\r\n          </div>\r\n        </li>\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  const toggleTaskCompletion = (index) => {\r\n    const updatedTasks = [...tasks];\r\n    updatedTasks[index].completed = !updatedTasks[index].completed;\r\n    setTasks(updatedTasks);\r\n  };\r\n\r\n  return (\r\n   <Task></Task>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,YAAY,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACtB,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACA,MAAMS,QAAQ,CAAC;IACbC,WAAWA,CAACC,WAAW,EAAE;MACvB,IAAI,CAACA,WAAW,GAAGA,WAAW;MAC9B,IAAI,CAACC,SAAS,GAAG,KAAK,CAAC,CAAE;IAC3B;EACF;EAEA,MAAMC,QAAQ,GAAIC,KAAK,IAAK;IAC1BN,aAAa,CAACM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACnC,CAAC;EAED,MAAMC,OAAO,GAAGA,CAAA,KAAM;IACpB,IAAIV,UAAU,CAACW,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC5B,MAAMC,OAAO,GAAG,IAAIV,QAAQ,CAACF,UAAU,CAAC;MACxCD,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEc,OAAO,CAAC,CAAC;MAC7BX,aAAa,CAAC,EAAE,CAAC,CAAC,CAAE;IACtB;EACF,CAAC;EAED,MAAMY,QAAQ,GAAGA,CAAA,KAAM;IACrB,OAAOf,KAAK,CAACgB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC3BrB,OAAA;MAAKsB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAC7BvB,OAAA;QAAAuB,QAAA,eACEvB,OAAA;UAAKsB,SAAS,EAAC,qBAAqB;UAAAC,QAAA,gBAClCvB,OAAA;YACEwB,IAAI,EAAC,UAAU;YACfC,OAAO,EAAEL,IAAI,CAACV,SAAU,CAAE;YAAA;YAC1BgB,QAAQ,EAAEA,CAAA,KAAMC,oBAAoB,CAACN,KAAK,CAAE,CAAC;UAAA;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9C,CAAC,eACF/B,OAAA;YAAMgC,EAAE,EAAC,WAAW;YAAAT,QAAA,EAAEH,IAAI,CAACX;UAAW;YAAAmB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3C;MAAC,GARCV,KAAK;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASV;IAAC,GAV8BV,KAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAWrC,CACN,CAAC;EACJ,CAAC;EAED,MAAMJ,oBAAoB,GAAIN,KAAK,IAAK;IACtC,MAAMY,YAAY,GAAG,CAAC,GAAG9B,KAAK,CAAC;IAC/B8B,YAAY,CAACZ,KAAK,CAAC,CAACX,SAAS,GAAG,CAACuB,YAAY,CAACZ,KAAK,CAAC,CAACX,SAAS;IAC9DN,QAAQ,CAAC6B,YAAY,CAAC;EACxB,CAAC;EAED,oBACCjC,OAAA,CAACkC,IAAI;IAAAN,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAO,CAAC;AAEhB,CAAC;AAAC7B,EAAA,CAlDID,IAAI;AAAAkC,EAAA,GAAJlC,IAAI;AAoDV,eAAeA,IAAI;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}