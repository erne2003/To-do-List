{"ast":null,"code":"var _jsxFileName = \"D:\\\\to-do-list\\\\src\\\\Plans.js\",\n  _s = $RefreshSig$();\n// Plans.js\nimport React, { useState } from \"react\";\nimport { FaPlusCircle, FaMinusCircle } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Plans({\n  planList,\n  setPlanList\n}) {\n  _s();\n  const [planInput1, setPlanInput1] = useState(\"\");\n  // …other inputs…\n\n  const addPlan = (index, inputValue, setter) => {\n    if (!inputValue.trim()) return;\n    const updated = [...planList];\n    updated[index] == null ? updated.push(inputValue) : updated[index] = inputValue;\n    setPlanList(updated);\n    setter(\"\");\n  };\n  const clearPlan = index => {\n    const updated = [...planList];\n    updated.splice(index, 1);\n    setPlanList(updated);\n  };\n\n  // renderSlot as before, but calling addPlan/clearPlan above…\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(Plans, \"SsIn7hb6TAuaTRfvZ32I6RKpIec=\");\n_c = Plans;\nvar _c;\n$RefreshReg$(_c, \"Plans\");","map":{"version":3,"names":["React","useState","FaPlusCircle","FaMinusCircle","jsxDEV","_jsxDEV","Plans","planList","setPlanList","_s","planInput1","setPlanInput1","addPlan","index","inputValue","setter","trim","updated","push","clearPlan","splice","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/to-do-list/src/Plans.js"],"sourcesContent":["// Plans.js\r\nimport React, { useState } from \"react\";\r\nimport { FaPlusCircle, FaMinusCircle } from \"react-icons/fa\";\r\n\r\nexport default function Plans({ planList, setPlanList }) {\r\n  const [planInput1, setPlanInput1] = useState(\"\");\r\n  // …other inputs…\r\n\r\n  const addPlan = (index, inputValue, setter) => {\r\n    if (!inputValue.trim()) return;\r\n    const updated = [...planList];\r\n    updated[index] == null ? updated.push(inputValue) : (updated[index] = inputValue);\r\n    setPlanList(updated);\r\n    setter(\"\");\r\n  };\r\n\r\n  const clearPlan = (index) => {\r\n    const updated = [...planList];\r\n    updated.splice(index, 1);\r\n    setPlanList(updated);\r\n  };\r\n\r\n  // renderSlot as before, but calling addPlan/clearPlan above…\r\n\r\n  return (\r\n    <div>\r\n      {/* …render your four slots here… */}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,YAAY,EAAEC,aAAa,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,eAAe,SAASC,KAAKA,CAAC;EAAEC,QAAQ;EAAEC;AAAY,CAAC,EAAE;EAAAC,EAAA;EACvD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAChD;;EAEA,MAAMW,OAAO,GAAGA,CAACC,KAAK,EAAEC,UAAU,EAAEC,MAAM,KAAK;IAC7C,IAAI,CAACD,UAAU,CAACE,IAAI,CAAC,CAAC,EAAE;IACxB,MAAMC,OAAO,GAAG,CAAC,GAAGV,QAAQ,CAAC;IAC7BU,OAAO,CAACJ,KAAK,CAAC,IAAI,IAAI,GAAGI,OAAO,CAACC,IAAI,CAACJ,UAAU,CAAC,GAAIG,OAAO,CAACJ,KAAK,CAAC,GAAGC,UAAW;IACjFN,WAAW,CAACS,OAAO,CAAC;IACpBF,MAAM,CAAC,EAAE,CAAC;EACZ,CAAC;EAED,MAAMI,SAAS,GAAIN,KAAK,IAAK;IAC3B,MAAMI,OAAO,GAAG,CAAC,GAAGV,QAAQ,CAAC;IAC7BU,OAAO,CAACG,MAAM,CAACP,KAAK,EAAE,CAAC,CAAC;IACxBL,WAAW,CAACS,OAAO,CAAC;EACtB,CAAC;;EAED;;EAEA,oBACEZ,OAAA;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEK,CAAC;AAEV;AAACf,EAAA,CAzBuBH,KAAK;AAAAmB,EAAA,GAALnB,KAAK;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}