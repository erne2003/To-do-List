{"ast":null,"code":"var _jsxFileName = \"D:\\\\to-do-list\\\\src\\\\Plans.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { FaPlusCircle, FaMinusCircle } from \"react-icons/fa\";\nimport \"./Plans.css\";\n\n// Plan class that holds tasks\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass Plan {\n  constructor(name, description) {\n    this.name = name;\n    this.taskList = [description]; // Initialize with the description passed to the constructor\n  }\n\n  // Method to add more tasks to the taskList\n  addTask(description) {\n    this.taskList.push(description); // Add a new task to the taskList\n  }\n\n  // Method to get the task list\n  getTasks() {\n    return this.taskList;\n  }\n}\nconst Plans = () => {\n  _s();\n  const [planList, setPlanList] = useState(() => {\n    const saved = localStorage.getItem(\"plans\");\n    if (saved) {\n      const parsedPlans = JSON.parse(saved);\n      return parsedPlans.map(plan => {\n        const taskList = Array.isArray(plan.taskList) ? plan.taskList : [];\n        return new Plan(plan.name, taskList[0] || \"\");\n      });\n    }\n    return [];\n  });\n  const [planInput1, setPlanInput1] = useState(\"\");\n  const [planInput2, setPlanInput2] = useState(\"\");\n  const [planInput3, setPlanInput3] = useState(\"\");\n  const [planInput4, setPlanInput4] = useState(\"\");\n  useEffect(() => {\n    localStorage.setItem(\"plans\", JSON.stringify(planList));\n  }, [planList]);\n  const addPlan = (index, inputValue, setter) => {\n    if (!inputValue.trim()) return;\n    const newPlan = new Plan(`Plan ${index + 1}`, inputValue);\n    setPlanList(prevList => {\n      const updatedList = [...prevList];\n      updatedList[index] = newPlan;\n      return updatedList;\n    });\n    setter(\"\");\n  };\n  const clearPlan = index => {\n    setPlanList(prevList => {\n      const updatedList = [...prevList];\n      updatedList.splice(index, 1);\n      return updatedList;\n    });\n  };\n  const renderSlot = (index, inputValue, setter) => {\n    const hasPlan = planList[index] != null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `Plan-${index + 1}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Plans-Content\",\n        children: [hasPlan ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: planList[index].name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), \"  \", /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: planList[index].getTasks().map((task, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: task\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 19\n            }, this) // Render each task\n            )\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: `Plan #${index + 1}`,\n          value: inputValue,\n          onChange: e => setter(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"Add-Plan\",\n          onClick: () => hasPlan ? clearPlan(index) : addPlan(index, inputValue, setter),\n          style: {\n            border: \"none\",\n            cursor: \"pointer\",\n            background: \"none\"\n          },\n          children: hasPlan ? /*#__PURE__*/_jsxDEV(FaMinusCircle, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 24\n          }, this) : /*#__PURE__*/_jsxDEV(FaPlusCircle, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Plans\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Plan-Title\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Plans Screen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Plans-Container\",\n      children: [renderSlot(0, planInput1, setPlanInput1), renderSlot(1, planInput2, setPlanInput2), renderSlot(2, planInput3, setPlanInput3), renderSlot(3, planInput4, setPlanInput4)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(Plans, \"WKb5yCKELOXRovUPFGLaqzpO7oc=\");\n_c = Plans;\nexport default Plans;\nvar _c;\n$RefreshReg$(_c, \"Plans\");","map":{"version":3,"names":["React","useState","useEffect","FaPlusCircle","FaMinusCircle","jsxDEV","_jsxDEV","Fragment","_Fragment","Plan","constructor","name","description","taskList","addTask","push","getTasks","Plans","_s","planList","setPlanList","saved","localStorage","getItem","parsedPlans","JSON","parse","map","plan","Array","isArray","planInput1","setPlanInput1","planInput2","setPlanInput2","planInput3","setPlanInput3","planInput4","setPlanInput4","setItem","stringify","addPlan","index","inputValue","setter","trim","newPlan","prevList","updatedList","clearPlan","splice","renderSlot","hasPlan","className","children","fileName","_jsxFileName","lineNumber","columnNumber","task","i","type","placeholder","value","onChange","e","target","onClick","style","border","cursor","background","_c","$RefreshReg$"],"sources":["D:/to-do-list/src/Plans.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { FaPlusCircle, FaMinusCircle } from \"react-icons/fa\";\r\nimport \"./Plans.css\";\r\n\r\n// Plan class that holds tasks\r\nclass Plan {\r\n  constructor(name, description) {\r\n    this.name = name;\r\n    this.taskList = [description]; // Initialize with the description passed to the constructor\r\n  }\r\n\r\n  // Method to add more tasks to the taskList\r\n  addTask(description) {\r\n    this.taskList.push(description); // Add a new task to the taskList\r\n  }\r\n\r\n  // Method to get the task list\r\n  getTasks() {\r\n    return this.taskList;\r\n  }\r\n}\r\n\r\nconst Plans = () => {\r\n  const [planList, setPlanList] = useState(() => {\r\n    const saved = localStorage.getItem(\"plans\");\r\n    if (saved) {\r\n      const parsedPlans = JSON.parse(saved);\r\n      return parsedPlans.map(plan => {\r\n        const taskList = Array.isArray(plan.taskList) ? plan.taskList : [];\r\n        return new Plan(plan.name, taskList[0] || \"\");\r\n      });\r\n    }\r\n    return [];\r\n  });\r\n\r\n  const [planInput1, setPlanInput1] = useState(\"\");\r\n  const [planInput2, setPlanInput2] = useState(\"\");\r\n  const [planInput3, setPlanInput3] = useState(\"\");\r\n  const [planInput4, setPlanInput4] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"plans\", JSON.stringify(planList));\r\n  }, [planList]);\r\n\r\n  const addPlan = (index, inputValue, setter) => {\r\n    if (!inputValue.trim()) return;\r\n\r\n    const newPlan = new Plan(`Plan ${index + 1}`, inputValue);\r\n    setPlanList(prevList => {\r\n      const updatedList = [...prevList];\r\n      updatedList[index] = newPlan;\r\n      return updatedList;\r\n    });\r\n    setter(\"\");\r\n  };\r\n\r\n  const clearPlan = index => {\r\n    setPlanList(prevList => {\r\n      const updatedList = [...prevList];\r\n      updatedList.splice(index, 1);\r\n      return updatedList;\r\n    });\r\n  };\r\n\r\n  const renderSlot = (index, inputValue, setter) => {\r\n    const hasPlan = planList[index] != null;\r\n    return (\r\n      <div className={`Plan-${index + 1}`}>\r\n        <div className=\"Plans-Content\">\r\n          {hasPlan ? (\r\n            <>\r\n              <h3>{planList[index].name}</h3>  {/* Render the plan name */}\r\n              <ul>\r\n                {planList[index].getTasks().map((task, i) => (\r\n                  <li key={i}>{task}</li>  // Render each task\r\n                ))}\r\n              </ul>\r\n            </>\r\n          ) : (\r\n            <input\r\n              type=\"text\"\r\n              placeholder={`Plan #${index + 1}`}\r\n              value={inputValue}\r\n              onChange={e => setter(e.target.value)}\r\n            />\r\n          )}\r\n          <button\r\n            className=\"Add-Plan\"\r\n            onClick={() =>\r\n              hasPlan ? clearPlan(index) : addPlan(index, inputValue, setter)\r\n            }\r\n            style={{ border: \"none\", cursor: \"pointer\", background: \"none\" }}\r\n          >\r\n            {hasPlan ? <FaMinusCircle /> : <FaPlusCircle />}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"Plans\">\r\n      <div className=\"Plan-Title\">\r\n        <h1>Plans Screen</h1>\r\n      </div>\r\n      <div className=\"Plans-Container\">\r\n        {renderSlot(0, planInput1, setPlanInput1)}\r\n        {renderSlot(1, planInput2, setPlanInput2)}\r\n        {renderSlot(2, planInput3, setPlanInput3)}\r\n        {renderSlot(3, planInput4, setPlanInput4)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Plans;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}