{"ast":null,"code":"var _jsxFileName = \"D:\\\\to-do-list\\\\src\\\\Plans.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./Plans.css\";\n\n// Plan class that holds tasks\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class Plan {\n  constructor(name, taskList = []) {\n    this.name = name;\n    this.taskList = taskList;\n  }\n  addTask(description) {\n    this.taskList.push({\n      description,\n      completed: false\n    });\n  }\n  getTasks() {\n    return this.taskList;\n  }\n}\nconst Plans = () => {\n  _s();\n  const [planList, setPlanList] = useState(() => {\n    const saved = localStorage.getItem(\"plans\");\n    if (saved) {\n      const parsed = JSON.parse(saved);\n      return parsed.map(p => new Plan(p.name, p.taskList || []));\n    }\n    return [];\n  });\n  useEffect(() => {\n    // Persist minimal shape: name + taskList\n    const toSave = planList.map(p => ({\n      name: p.name,\n      taskList: p.taskList\n    }));\n    localStorage.setItem(\"plans\", JSON.stringify(toSave));\n  }, [planList]);\n  const [inputs, setInputs] = useState([\"\", \"\", \"\", \"\"]);\n  const addPlan = index => {\n    const name = inputs[index].trim();\n    if (!name) return;\n    const newPlan = new Plan(name);\n    setPlanList(pls => {\n      const copy = [...pls];\n      copy[index] = newPlan;\n      return copy;\n    });\n    setInputs(inp => {\n      const c = [...inp];\n      c[index] = \"\";\n      return c;\n    });\n  };\n  const clearPlan = index => {\n    setPlanList(pls => {\n      const copy = [...pls];\n      copy.splice(index, 1);\n      return copy;\n    });\n  };\n  const renderSlot = index => {\n    const plan = planList[index];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `Plan-${index + 1}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Plans-Content\",\n        children: [plan ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: plan.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: plan.getTasks().map((task, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: typeof task === \"object\" ? task.description : task\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: `Enter plan #${index + 1} name`,\n          value: inputs[index],\n          onChange: e => {\n            const c = [...inputs];\n            c[index] = e.target.value;\n            setInputs(c);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"Add-Plan\",\n          onClick: () => plan ? clearPlan(index) : addPlan(index),\n          style: {\n            border: \"none\",\n            cursor: \"pointer\",\n            background: \"none\"\n          },\n          children: plan ? \"Remove Plan\" : \"Add Plan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Plans\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Plan-Title\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Plans Screen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Plans-Container\",\n      children: [0, 1, 2, 3].map(renderSlot)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s(Plans, \"WnYUOqbxW+drQgXBfSzERhCGuUs=\");\n_c = Plans;\nexport default Plans;\nvar _c;\n$RefreshReg$(_c, \"Plans\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Plan","constructor","name","taskList","addTask","description","push","completed","getTasks","Plans","_s","planList","setPlanList","saved","localStorage","getItem","parsed","JSON","parse","map","p","toSave","setItem","stringify","inputs","setInputs","addPlan","index","trim","newPlan","pls","copy","inp","c","clearPlan","splice","renderSlot","plan","className","children","fileName","_jsxFileName","lineNumber","columnNumber","task","i","type","placeholder","value","onChange","e","target","onClick","style","border","cursor","background","_c","$RefreshReg$"],"sources":["D:/to-do-list/src/Plans.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Plans.css\";\r\n\r\n// Plan class that holds tasks\r\nexport class Plan {\r\n  constructor(name, taskList = []) {\r\n    this.name = name;\r\n    this.taskList = taskList;\r\n  }\r\n  addTask(description) {\r\n    this.taskList.push({ description, completed: false });\r\n  }\r\n  getTasks() {\r\n    return this.taskList;\r\n  }\r\n}\r\n\r\nconst Plans = () => {\r\n  const [planList, setPlanList] = useState(() => {\r\n    const saved = localStorage.getItem(\"plans\");\r\n    if (saved) {\r\n      const parsed = JSON.parse(saved);\r\n      return parsed.map(p => new Plan(p.name, p.taskList || []));\r\n    }\r\n    return [];\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Persist minimal shape: name + taskList\r\n    const toSave = planList.map(p => ({\r\n      name: p.name,\r\n      taskList: p.taskList\r\n    }));\r\n    localStorage.setItem(\"plans\", JSON.stringify(toSave));\r\n  }, [planList]);\r\n\r\n  const [inputs, setInputs] = useState([\"\", \"\", \"\", \"\"]);\r\n\r\n  const addPlan = index => {\r\n    const name = inputs[index].trim();\r\n    if (!name) return;\r\n    const newPlan = new Plan(name);\r\n    setPlanList(pls => {\r\n      const copy = [...pls];\r\n      copy[index] = newPlan;\r\n      return copy;\r\n    });\r\n    setInputs(inp => {\r\n      const c = [...inp];\r\n      c[index] = \"\";\r\n      return c;\r\n    });\r\n  };\r\n\r\n  const clearPlan = index => {\r\n    setPlanList(pls => {\r\n      const copy = [...pls];\r\n      copy.splice(index, 1);\r\n      return copy;\r\n    });\r\n  };\r\n\r\n  const renderSlot = index => {\r\n    const plan = planList[index];\r\n    return (\r\n      <div key={index} className={`Plan-${index + 1}`}>\r\n        <div className=\"Plans-Content\">\r\n          {plan ? (\r\n            <>\r\n              <h3>{plan.name}</h3>\r\n              <ul>\r\n                {plan.getTasks().map((task, i) => (\r\n                  <li key={i}>\r\n                    {/* task may be an object */}\r\n                    {typeof task === \"object\" ? task.description : task}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </>\r\n          ) : (\r\n            <input\r\n              type=\"text\"\r\n              placeholder={`Enter plan #${index + 1} name`}\r\n              value={inputs[index]}\r\n              onChange={e => {\r\n                const c = [...inputs];\r\n                c[index] = e.target.value;\r\n                setInputs(c);\r\n              }}\r\n            />\r\n          )}\r\n          <button\r\n            className=\"Add-Plan\"\r\n            onClick={() =>\r\n              plan ? clearPlan(index) : addPlan(index)\r\n            }\r\n            style={{\r\n              border: \"none\",\r\n              cursor: \"pointer\",\r\n              background: \"none\"\r\n            }}\r\n          >\r\n            {plan ? \"Remove Plan\" : \"Add Plan\"}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"Plans\">\r\n      <div className=\"Plan-Title\">\r\n        <h1>Plans Screen</h1>\r\n      </div>\r\n      <div className=\"Plans-Container\">\r\n        {[0, 1, 2, 3].map(renderSlot)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Plans;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,aAAa;;AAEpB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,OAAO,MAAMC,IAAI,CAAC;EAChBC,WAAWA,CAACC,IAAI,EAAEC,QAAQ,GAAG,EAAE,EAAE;IAC/B,IAAI,CAACD,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,QAAQ,GAAGA,QAAQ;EAC1B;EACAC,OAAOA,CAACC,WAAW,EAAE;IACnB,IAAI,CAACF,QAAQ,CAACG,IAAI,CAAC;MAAED,WAAW;MAAEE,SAAS,EAAE;IAAM,CAAC,CAAC;EACvD;EACAC,QAAQA,CAAA,EAAG;IACT,OAAO,IAAI,CAACL,QAAQ;EACtB;AACF;AAEA,MAAMM,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,MAAM;IAC7C,MAAMmB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,EAAE;MACT,MAAMG,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACL,KAAK,CAAC;MAChC,OAAOG,MAAM,CAACG,GAAG,CAACC,CAAC,IAAI,IAAIpB,IAAI,CAACoB,CAAC,CAAClB,IAAI,EAAEkB,CAAC,CAACjB,QAAQ,IAAI,EAAE,CAAC,CAAC;IAC5D;IACA,OAAO,EAAE;EACX,CAAC,CAAC;EAEFR,SAAS,CAAC,MAAM;IACd;IACA,MAAM0B,MAAM,GAAGV,QAAQ,CAACQ,GAAG,CAACC,CAAC,KAAK;MAChClB,IAAI,EAAEkB,CAAC,CAAClB,IAAI;MACZC,QAAQ,EAAEiB,CAAC,CAACjB;IACd,CAAC,CAAC,CAAC;IACHW,YAAY,CAACQ,OAAO,CAAC,OAAO,EAAEL,IAAI,CAACM,SAAS,CAACF,MAAM,CAAC,CAAC;EACvD,CAAC,EAAE,CAACV,QAAQ,CAAC,CAAC;EAEd,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAG/B,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EAEtD,MAAMgC,OAAO,GAAGC,KAAK,IAAI;IACvB,MAAMzB,IAAI,GAAGsB,MAAM,CAACG,KAAK,CAAC,CAACC,IAAI,CAAC,CAAC;IACjC,IAAI,CAAC1B,IAAI,EAAE;IACX,MAAM2B,OAAO,GAAG,IAAI7B,IAAI,CAACE,IAAI,CAAC;IAC9BU,WAAW,CAACkB,GAAG,IAAI;MACjB,MAAMC,IAAI,GAAG,CAAC,GAAGD,GAAG,CAAC;MACrBC,IAAI,CAACJ,KAAK,CAAC,GAAGE,OAAO;MACrB,OAAOE,IAAI;IACb,CAAC,CAAC;IACFN,SAAS,CAACO,GAAG,IAAI;MACf,MAAMC,CAAC,GAAG,CAAC,GAAGD,GAAG,CAAC;MAClBC,CAAC,CAACN,KAAK,CAAC,GAAG,EAAE;MACb,OAAOM,CAAC;IACV,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,SAAS,GAAGP,KAAK,IAAI;IACzBf,WAAW,CAACkB,GAAG,IAAI;MACjB,MAAMC,IAAI,GAAG,CAAC,GAAGD,GAAG,CAAC;MACrBC,IAAI,CAACI,MAAM,CAACR,KAAK,EAAE,CAAC,CAAC;MACrB,OAAOI,IAAI;IACb,CAAC,CAAC;EACJ,CAAC;EAED,MAAMK,UAAU,GAAGT,KAAK,IAAI;IAC1B,MAAMU,IAAI,GAAG1B,QAAQ,CAACgB,KAAK,CAAC;IAC5B,oBACE9B,OAAA;MAAiByC,SAAS,EAAE,QAAQX,KAAK,GAAG,CAAC,EAAG;MAAAY,QAAA,eAC9C1C,OAAA;QAAKyC,SAAS,EAAC,eAAe;QAAAC,QAAA,GAC3BF,IAAI,gBACHxC,OAAA,CAAAE,SAAA;UAAAwC,QAAA,gBACE1C,OAAA;YAAA0C,QAAA,EAAKF,IAAI,CAACnC;UAAI;YAAAsC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACpB9C,OAAA;YAAA0C,QAAA,EACGF,IAAI,CAAC7B,QAAQ,CAAC,CAAC,CAACW,GAAG,CAAC,CAACyB,IAAI,EAAEC,CAAC,kBAC3BhD,OAAA;cAAA0C,QAAA,EAEG,OAAOK,IAAI,KAAK,QAAQ,GAAGA,IAAI,CAACvC,WAAW,GAAGuC;YAAI,GAF5CC,CAAC;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAGN,CACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC;QAAA,eACL,CAAC,gBAEH9C,OAAA;UACEiD,IAAI,EAAC,MAAM;UACXC,WAAW,EAAE,eAAepB,KAAK,GAAG,CAAC,OAAQ;UAC7CqB,KAAK,EAAExB,MAAM,CAACG,KAAK,CAAE;UACrBsB,QAAQ,EAAEC,CAAC,IAAI;YACb,MAAMjB,CAAC,GAAG,CAAC,GAAGT,MAAM,CAAC;YACrBS,CAAC,CAACN,KAAK,CAAC,GAAGuB,CAAC,CAACC,MAAM,CAACH,KAAK;YACzBvB,SAAS,CAACQ,CAAC,CAAC;UACd;QAAE;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACF,eACD9C,OAAA;UACEyC,SAAS,EAAC,UAAU;UACpBc,OAAO,EAAEA,CAAA,KACPf,IAAI,GAAGH,SAAS,CAACP,KAAK,CAAC,GAAGD,OAAO,CAACC,KAAK,CACxC;UACD0B,KAAK,EAAE;YACLC,MAAM,EAAE,MAAM;YACdC,MAAM,EAAE,SAAS;YACjBC,UAAU,EAAE;UACd,CAAE;UAAAjB,QAAA,EAEDF,IAAI,GAAG,aAAa,GAAG;QAAU;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC,GAvCEhB,KAAK;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAwCV,CAAC;EAEV,CAAC;EAED,oBACE9C,OAAA;IAAKyC,SAAS,EAAC,OAAO;IAAAC,QAAA,gBACpB1C,OAAA;MAAKyC,SAAS,EAAC,YAAY;MAAAC,QAAA,eACzB1C,OAAA;QAAA0C,QAAA,EAAI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC,eACN9C,OAAA;MAAKyC,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAC7B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAACpB,GAAG,CAACiB,UAAU;IAAC;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACjC,EAAA,CAtGID,KAAK;AAAAgD,EAAA,GAALhD,KAAK;AAwGX,eAAeA,KAAK;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}