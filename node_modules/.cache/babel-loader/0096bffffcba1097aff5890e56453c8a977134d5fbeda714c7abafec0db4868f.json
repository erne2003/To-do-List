{"ast":null,"code":"var _jsxFileName = \"D:\\\\to-do-list\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './App.css'; // Make sure this is in App.js\nimport './index.css'; // Make sure this is in index.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State for storing tasks\n  const [tasks, setTasks] = useState([]);\n\n  // State for storing input value\n  const [inputValue, setInputValue] = useState(\"\");\n\n  // TaskNode and TaskList classes\n  class TaskNode {\n    constructor(description) {\n      this.description = description;\n      this.completed = false;\n      this.next = null;\n    }\n  }\n  let taskList = [];\n  const addTask = () => {\n    if (inputValue.trim()) {\n      // Check if input is not empty\n      taskList.addTask(inputValue); // Add task to the list\n      setTasks(taskList.getTasks()); // Update state to re-render the task list\n      setInputValue(\"\"); // Clear the input field\n    }\n  };\n\n  // Function to handle input change\n  const handleInputChange = event => {\n    setInputValue(event.target.value); // Update input value state\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Navigation\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputValue // Bind the input field to state\n        ,\n        onChange: handleInputChange // Update state on input change\n        ,\n        placeholder: \"Enter a task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"Task-Function\",\n        onClick: addTask // Add task on button click\n        ,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"PXBrZe26VLVTY1uyjOMLL2N2SNQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","inputValue","setInputValue","TaskNode","constructor","description","completed","next","taskList","addTask","trim","getTasks","handleInputChange","event","target","value","className","children","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","id","onClick","_c","$RefreshReg$"],"sources":["D:/to-do-list/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport './App.css'; // Make sure this is in App.js\r\nimport './index.css'; // Make sure this is in index.js\r\n\r\nfunction App() {\r\n  // State for storing tasks\r\n  const [tasks, setTasks] = useState([]);\r\n  \r\n  // State for storing input value\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  // TaskNode and TaskList classes\r\n  class TaskNode {\r\n    constructor(description) {\r\n      this.description = description;\r\n      this.completed = false;\r\n      this.next = null;\r\n    }\r\n  }\r\n\r\n let taskList=[];\r\n   \r\n  \r\n  const addTask = () => {\r\n    if (inputValue.trim()) {  // Check if input is not empty\r\n      taskList.addTask(inputValue); // Add task to the list\r\n      setTasks(taskList.getTasks()); // Update state to re-render the task list\r\n      setInputValue(\"\"); // Clear the input field\r\n    }\r\n  };\r\n\r\n  // Function to handle input change\r\n  const handleInputChange = (event) => {\r\n    setInputValue(event.target.value); // Update input value state\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"Navigation\">\r\n        <input\r\n          type=\"text\"\r\n          value={inputValue} // Bind the input field to state\r\n          onChange={handleInputChange} // Update state on input change\r\n          placeholder=\"Enter a task\"\r\n        />\r\n        <button\r\n          id=\"Task-Function\"\r\n          onClick={addTask} // Add task on button click\r\n        >\r\n          Add Task\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"container\">\r\n        <div className=\"Task\">\r\n    \r\n          \r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW,CAAC,CAAC;AACpB,OAAO,aAAa,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACA,MAAMS,QAAQ,CAAC;IACbC,WAAWA,CAACC,WAAW,EAAE;MACvB,IAAI,CAACA,WAAW,GAAGA,WAAW;MAC9B,IAAI,CAACC,SAAS,GAAG,KAAK;MACtB,IAAI,CAACC,IAAI,GAAG,IAAI;IAClB;EACF;EAED,IAAIC,QAAQ,GAAC,EAAE;EAGd,MAAMC,OAAO,GAAGA,CAAA,KAAM;IACpB,IAAIR,UAAU,CAACS,IAAI,CAAC,CAAC,EAAE;MAAG;MACxBF,QAAQ,CAACC,OAAO,CAACR,UAAU,CAAC,CAAC,CAAC;MAC9BD,QAAQ,CAACQ,QAAQ,CAACG,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;MAC/BT,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC;IACrB;EACF,CAAC;;EAED;EACA,MAAMU,iBAAiB,GAAIC,KAAK,IAAK;IACnCX,aAAa,CAACW,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;EACrC,CAAC;EAED,oBACEnB,OAAA;IAAKoB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBrB,OAAA;MAAKoB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBrB,OAAA;QACEsB,IAAI,EAAC,MAAM;QACXH,KAAK,EAAEd,UAAW,CAAC;QAAA;QACnBkB,QAAQ,EAAEP,iBAAkB,CAAC;QAAA;QAC7BQ,WAAW,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B,CAAC,eACF5B,OAAA;QACE6B,EAAE,EAAC,eAAe;QAClBC,OAAO,EAAEjB,OAAQ,CAAC;QAAA;QAAAQ,QAAA,EACnB;MAED;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAEN5B,OAAA;MAAKoB,SAAS,EAAC,WAAW;MAAAC,QAAA,eACxBrB,OAAA;QAAKoB,SAAS,EAAC;MAAM;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGhB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC1B,EAAA,CAzDQD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AA2DZ,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}